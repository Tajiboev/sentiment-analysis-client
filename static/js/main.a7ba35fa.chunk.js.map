{"version":3,"sources":["Styles/container.module.sass","Styles/results.module.sass","Styles/form.module.sass","Components/Container.tsx","Components/Explanation.tsx","Components/Results.tsx","Components/TextForm.tsx","App.tsx","index.tsx"],"names":["module","exports","Container","children","className","styles","container","Explanation","href","target","rel","Results","results","table","span","style","width","map","result","sentence","score","comparative","TextForm","setResults","useState","loading","setloading","ref","useRef","form","onSubmit","e","preventDefault","current","text","value","axios","post","then","console","log","data","catch","alert","error","fieldset","textarea","rows","button","disabled","App","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,UAAY,+B,kBCA9BD,EAAOC,QAAU,CAAC,MAAQ,yB,kBCA1BD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,SAAW,uBAAuB,SAAW,uBAAuB,OAAS,uB,gICM1GC,EAJO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACxB,OAAO,qBAAKC,UAAWC,IAAOC,UAAvB,SAAmCH,KC+D5BI,EAjES,WACvB,OACC,gCACC,gFACiD,IAChD,mBACCC,KAAK,0CACLC,OAAO,SACPC,IAAI,sBAHL,uBAFD,gDAS+C,IAC9C,mBACCF,KAAK,mDACLC,OAAO,SACPC,IAAI,sBAHL,uBAMK,IAhBN,eAiBc,IACb,mBACCF,KAAK,4EACLC,OAAO,SACPC,IAAI,sBAHL,qCAMK,IAxBN,sEA4BA,6DACA,8BACC,mBACCF,KAAK,mDACLC,OAAO,SACPC,IAAI,sBAHL,gCAMK,IAPN,ifAgBA,+CACA,ulBAOyE,OAEzE,sH,gBChBYC,EA/BY,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OACC,wBAAOR,UAAWC,IAAOQ,MAAzB,UACC,+CACA,qCACC,qBAAKC,KAAM,EAAGC,MAAO,CAAEC,MAAO,SAC9B,qBAAKF,KAAM,EAAGC,MAAO,CAAEC,MAAO,SAC9B,qBAAKF,KAAM,EAAGC,MAAO,CAAEC,MAAO,YAE/B,gCACC,+BACC,0CACA,uCACA,kDAGF,gCACEJ,EAAQK,KAAI,SAACC,GACb,OACC,+BACC,oBAAId,UAAWC,IAAOc,SAAtB,SAAiCD,EAAOC,WACxC,oBAAIf,UAAWC,IAAOe,MAAtB,SAA8BF,EAAOE,QACrC,oBAAIhB,UAAWC,IAAOe,MAAtB,SAA8BF,EAAOG,0B,iCCY7BC,EArCa,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACjBC,oBAAS,GADQ,mBACxCC,EADwC,KAC/BC,EAD+B,KAEzCC,EAAMC,iBAA4B,MAsBxC,OACC,sBAAMxB,UAAWC,IAAOwB,KAAMC,SAtBV,SAACC,GAGrB,GAFAA,EAAEC,iBACFN,GAAW,GACPC,EAAIM,QAAS,CAChB,IAAIC,EAAOP,EAAIM,QAAQE,MACvBC,IACEC,KAAyB,mDAAoD,CAC7EH,SAEAI,MAAK,SAACpB,GACNqB,QAAQC,IAAItB,GACZK,EAAWL,EAAOuB,KAAKA,MACvBf,GAAW,MAEXgB,OAAM,SAACX,GACPL,GAAW,GACXiB,MAAM,mCACNJ,QAAQK,MAAMb,QAKjB,SACC,2BAAU3B,UAAWC,IAAOwC,SAA5B,UACC,0EACA,0BAAUzC,UAAWC,IAAOyC,SAAUC,KAAM,EAAGpB,IAAKA,IACpD,wBAAQvB,UAAWC,IAAO2C,OAAQC,SAAUxB,EAA5C,SACEA,EAAU,sBAAwB,yBCTzByB,EAzBC,WAAO,IAAD,EACS1B,mBAAmB,IAD5B,mBACdZ,EADc,KACLW,EADK,KAGrB,OACC,iCACC,iCACC,cAAC,EAAD,UACC,6DAGF,eAAC,EAAD,WACC,cAAC,EAAD,CAAUA,WAAYA,IACF,IAAnBX,EAAQuC,QAAgB,cAAC,EAAD,CAASvC,QAASA,IAC3C,uBACA,cAAC,EAAD,OAED,iCACC,cAAC,EAAD,UACC,2F,MCnBLwC,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.a7ba35fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__2BsfZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"results_table__3HX3y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__1nrlR\",\"fieldset\":\"form_fieldset__3PbX0\",\"textarea\":\"form_textarea__dDQuz\",\"button\":\"form_button__1cPHF\"};","import { FC } from \"react\";\r\nimport styles from \"../Styles/container.module.sass\";\r\n\r\nconst Container: FC = ({ children }) => {\r\n\treturn <div className={styles.container}>{children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","import { FC } from \"react\";\r\n\r\nconst Explanation: FC = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<p>\r\n\t\t\t\tThis sentiment analysis tool was built based on{\" \"}\r\n\t\t\t\t<a\r\n\t\t\t\t\thref=\"https://www.npmjs.com/package/sentiment\"\r\n\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t>\r\n\t\t\t\t\tSentiment\r\n\t\t\t\t</a>\r\n\t\t\t\t. Sentiment is a Node.js module that uses the{\" \"}\r\n\t\t\t\t<a\r\n\t\t\t\t\thref=\"http://www2.imm.dtu.dk/pubdb/pubs/6010-full.html\"\r\n\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t>\r\n\t\t\t\t\tAFINN-165\r\n\t\t\t\t</a>{\" \"}\r\n\t\t\t\twordlist and{\" \"}\r\n\t\t\t\t<a\r\n\t\t\t\t\thref=\"https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0144296\"\r\n\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t>\r\n\t\t\t\t\tEmoji Sentiment Ranking\r\n\t\t\t\t</a>{\" \"}\r\n\t\t\t\tto perform sentiment analysis on arbitrary blocks of input text.\r\n\t\t\t</p>\r\n\r\n\t\t\t<h4>What is sentiment analysis?</h4>\r\n\t\t\t<p>\r\n\t\t\t\t<a\r\n\t\t\t\t\thref=\"https://en.wikipedia.org/wiki/Sentiment_analysis\"\r\n\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t>\r\n\t\t\t\t\tSentiment analysis\r\n\t\t\t\t</a>{\" \"}\r\n\t\t\t\t(also known as opinion mining or emotion AI) is the use of natural language\r\n\t\t\t\tprocessing, text analysis, computational linguistics, and biometrics to\r\n\t\t\t\tsystematically identify, extract, quantify, and study affective states and\r\n\t\t\t\tsubjective information. Sentiment analysis is widely applied to voice of the\r\n\t\t\t\tcustomer materials such as reviews and survey responses, online and social media,\r\n\t\t\t\tand healthcare materials for applications that range from marketing to customer\r\n\t\t\t\tservice to clinical medicine.\r\n\t\t\t</p>\r\n\t\t\t<h4>How it works?</h4>\r\n\t\t\t<p>\r\n\t\t\t\tSentiment analysis is performed by cross-checking the string tokens (words, emojis)\r\n\t\t\t\twith the AFINN list and getting their respective scores. AFINN is a list of words\r\n\t\t\t\trated for valence with an integer between minus five (negative) and plus five\r\n\t\t\t\t(positive). This approach leaves you with a mid-point of 0 and the upper and lower\r\n\t\t\t\tbounds are constrained to positive and negative 5 respectively. For example, let's\r\n\t\t\t\timagine an incredibly \"positive\" string with 200 tokens and where each token has an\r\n\t\t\t\tAFINN score of 5. Our resulting comparative score would look like this:{\" \"}\r\n\t\t\t</p>\r\n\t\t\t<code>\r\n\t\t\t\t(max positive score * number of tokens) / number of tokens (5 * 200) / 200 = 5\r\n\t\t\t</code>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Explanation;\r\n","import { FC } from \"react\";\r\nimport styles from \"../Styles/results.module.sass\";\r\n\r\nexport interface Result {\r\n\tsentence: string;\r\n\tscore: number;\r\n\tcomparative: number;\r\n}\r\n\r\ninterface Props {\r\n\tresults: Array<Result>;\r\n}\r\n\r\nconst Results: FC<Props> = ({ results }) => {\r\n\treturn (\r\n\t\t<table className={styles.table}>\r\n\t\t\t<caption>Results:</caption>\r\n\t\t\t<colgroup>\r\n\t\t\t\t<col span={1} style={{ width: \"80%\" }} />\r\n\t\t\t\t<col span={1} style={{ width: \"10%\" }} />\r\n\t\t\t\t<col span={1} style={{ width: \"10%\" }} />\r\n\t\t\t</colgroup>\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>Sentence</th>\r\n\t\t\t\t\t<th>Score</th>\r\n\t\t\t\t\t<th>Comparative</th>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t\t{results.map((result) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td className={styles.sentence}>{result.sentence}</td>\r\n\t\t\t\t\t\t\t<td className={styles.score}>{result.score}</td>\r\n\t\t\t\t\t\t\t<td className={styles.score}>{result.comparative}</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\t);\r\n};\r\n\r\nexport default Results;\r\n","import axios from \"axios\";\r\nimport React, { Dispatch, useRef, useState } from \"react\";\r\nimport { FC } from \"react\";\r\nimport styles from \"../Styles/form.module.sass\";\r\nimport { Result } from \"./Results\";\r\n\r\ninterface Props {\r\n\tsetResults: Dispatch<React.SetStateAction<Result[]>>;\r\n}\r\n\r\nconst TextForm: FC<Props> = ({ setResults }) => {\r\n\tconst [loading, setloading] = useState(false);\r\n\tconst ref = useRef<HTMLTextAreaElement>(null);\r\n\tconst handleSubmit = (e: React.FormEvent) => {\r\n\t\te.preventDefault();\r\n\t\tsetloading(true);\r\n\t\tif (ref.current) {\r\n\t\t\tlet text = ref.current.value;\r\n\t\t\taxios\r\n\t\t\t\t.post<{ data: Result[] }>(\"https://arcane-coast-64432.herokuapp.com/analyze\", {\r\n\t\t\t\t\ttext,\r\n\t\t\t\t})\r\n\t\t\t\t.then((result) => {\r\n\t\t\t\t\tconsole.log(result);\r\n\t\t\t\t\tsetResults(result.data.data);\r\n\t\t\t\t\tsetloading(false);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => {\r\n\t\t\t\t\tsetloading(false);\r\n\t\t\t\t\talert(\"Error fetching data from server\");\r\n\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t});\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<form className={styles.form} onSubmit={handleSubmit}>\r\n\t\t\t<fieldset className={styles.fieldset}>\r\n\t\t\t\t<legend>Place you text inside this textarea:</legend>\r\n\t\t\t\t<textarea className={styles.textarea} rows={8} ref={ref}></textarea>\r\n\t\t\t\t<button className={styles.button} disabled={loading}>\r\n\t\t\t\t\t{loading ? \"Waiting for results\" : \"Analyze â†’\"}\r\n\t\t\t\t</button>\r\n\t\t\t</fieldset>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default TextForm;\r\n","import { FC, useState } from \"react\";\nimport Container from \"./Components/Container\";\nimport Explanation from \"./Components/Explanation\";\nimport Results, { Result } from \"./Components/Results\";\nimport TextForm from \"./Components/TextForm\";\n\nconst App: FC = () => {\n\tconst [results, setResults] = useState<Result[]>([]);\n\n\treturn (\n\t\t<main>\n\t\t\t<header>\n\t\t\t\t<Container>\n\t\t\t\t\t<h2>Sentiment analysis tool</h2>\n\t\t\t\t</Container>\n\t\t\t</header>\n\t\t\t<Container>\n\t\t\t\t<TextForm setResults={setResults} />\n\t\t\t\t{results.length !== 0 && <Results results={results} />}\n\t\t\t\t<hr />\n\t\t\t\t<Explanation />\n\t\t\t</Container>\n\t\t\t<footer>\n\t\t\t\t<Container>\n\t\t\t\t\t<p>This tool was build with educational purpose only!</p>\n\t\t\t\t</Container>\n\t\t\t</footer>\n\t\t</main>\n\t);\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./Styles/index.sass\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}